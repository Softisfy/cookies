{"version":3,"sources":["../../src/index.tsx","App.tsx","index.tsx"],"names":["loadScripts","types","type","script","source","document","createScript","src","cookieName","controls","useState","onCheckboxChange","target","setControlledTypes","checked","onSubmit","setActive","scripts","currentTypes","controlledTypes","activeTypes","Cookies","expires","useEffect","cookies","disabled","className","isActive","onClick","state","React","title","typeProps","key","id","onChange","htmlFor","name","App","Fragment","alt","toggle","description","all","selected","label","location","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.af8ff101.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Cookies from 'js-cookie';\nimport Markdown from 'markdown-to-jsx';\n\nimport './styles.css';\n\ninterface IProps {\n\ttitle: string;\n\tdescription: string;\n\ttoggle: string;\n\tcontrols: {\n\t\tall: string;\n\t\tselected: string;\n\t};\n\ttypes: IType[];\n\tcookieName?: string;\n}\n\ninterface IScript {\n\tlocation: 'head' | 'body';\n\tsrc: string;\n}\ninterface IType {\n\tid: string;\n\tlabel: string;\n\tscripts: IScript[];\n\tdisabled?: boolean;\n\tchecked?: boolean;\n}\n\ninterface IButtonClickEvent\n\textends React.MouseEvent<HTMLButtonElement, MouseEvent> {\n\ttarget: HTMLButtonElement;\n}\n\ninterface ICheckboxChangeEvent extends React.ChangeEvent<HTMLInputElement> {}\n\nconst createScript = (source: string) => {\n\tconst script = document.createElement('script');\n\tscript.type = 'text/javascript';\n\tscript.dataset.cookiesScript = '';\n\tscript.src = source;\n\tscript.async = true;\n\treturn script;\n};\n\nconst loadScripts = (types: IType[]) => {\n\ttypes.forEach((type) => {\n\t\ttype.scripts.forEach(({ location, src }) => {\n\t\t\tconst script = createScript(src);\n\t\t\tdocument[location] && document[location].appendChild(script);\n\t\t});\n\t});\n};\n\nconst unloadScripts = () => {\n\tconst scripts = document.querySelectorAll('script[data-cookies-script]');\n\n\tscripts.forEach((script) => {\n\t\tscript?.parentElement!.removeChild(script);\n\t});\n};\n\nconst CookiesDialog = ({\n\tcookieName = 'GDPR',\n\ttitle,\n\tdescription,\n\ttoggle,\n\ttypes,\n\tcontrols\n}: IProps) => {\n\tconst [controlledTypes, setControlledTypes] = useState<IType[]>([]);\n\tconst [isActive, setActive] = useState(false);\n\n\tconst onToggleClick = () => setActive((state) => !state);\n\n\tconst onCheckboxChange = ({ target }: ICheckboxChangeEvent) => {\n\t\tif (!target || !target.id) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetControlledTypes((types) =>\n\t\t\ttypes.map((type) => ({\n\t\t\t\t...type,\n\t\t\t\t...(type.id === target.id && { checked: target.checked })\n\t\t\t}))\n\t\t);\n\t};\n\n\tconst onSubmit = ({ target }: IButtonClickEvent) => {\n\t\tif (!target || !target.name) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetActive(false);\n\t\tunloadScripts();\n\n\t\tlet currentTypes;\n\t\tif (target.name === 'selected') {\n\t\t\tcurrentTypes = controlledTypes;\n\t\t} else if (target.name === 'all') {\n\t\t\tcurrentTypes = controlledTypes.map((type) => ({\n\t\t\t\t...type,\n\t\t\t\tchecked: true\n\t\t\t}));\n\n\t\t\tsetControlledTypes(currentTypes);\n\t\t}\n\n\t\tconst activeTypes = currentTypes?.filter((type) => type.checked) || [];\n\n\t\tCookies.set(\n\t\t\tcookieName,\n\t\t\tactiveTypes.map((type) => type.id),\n\t\t\t{ expires: 365 }\n\t\t);\n\n\t\tloadScripts(activeTypes);\n\t};\n\n\tuseEffect(() => {\n\t\tif (!types) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst cookies = Cookies.get(cookieName)?.split(',');\n\n\t\tconst currentTypes = types.map((type) => ({\n\t\t\t...type,\n\t\t\tchecked: cookies?.includes(type.id) ? true : type.checked || false,\n\t\t\tdisabled: type.disabled || false\n\t\t}));\n\n\t\tconst activeTypes = currentTypes.filter((type) => type.checked);\n\n\t\tsetActive(!cookies);\n\t\tsetControlledTypes(currentTypes);\n\t\tloadScripts(activeTypes);\n\t}, []);\n\n\treturn (\n\t\t<div className={`stf-cookies${isActive ? ' stf-cookies--active' : ''}`}>\n\t\t\t<button className=\"stf-cookies__toggle\" onClick={onToggleClick}>\n\t\t\t\t<Markdown>{toggle}</Markdown>\n\t\t\t</button>\n\n\t\t\t{title && <h2 className=\"stf-cookies__title\">{title}</h2>}\n\t\t\t<div className=\"stf-cookies__description\">\n\t\t\t\t<Markdown>{description}</Markdown>\n\t\t\t</div>\n\n\t\t\t<form className=\"stf-cookies__form\">\n\t\t\t\t<div className=\"stf-cookies__types\">\n\t\t\t\t\t{controlledTypes.map(({ scripts, ...typeProps }) => (\n\t\t\t\t\t\t<div key={typeProps.id} className=\"stf-cookies__type\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t{...typeProps}\n\t\t\t\t\t\t\t\tonChange={onCheckboxChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label htmlFor={typeProps.id}>{typeProps.label}</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\n\t\t\t\t{controls && (\n\t\t\t\t\t<div className=\"stf-cookies__controls\">\n\t\t\t\t\t\t<button name=\"selected\" type=\"button\" onClick={onSubmit}>\n\t\t\t\t\t\t\t{controls.selected}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button name=\"all\" type=\"button\" onClick={onSubmit}>\n\t\t\t\t\t\t\t{controls.all}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default CookiesDialog;\n","import React from 'react';\n\nimport CookiesDialog from '@softisfy/cookies';\nimport '@softisfy/cookies/dist/index.css';\n\nconst App = () => {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<img id=\"logo\" src=\"./logo.svg\" alt=\"_cookies\" />\n\n\t\t\t<CookiesDialog\n\t\t\t\ttoggle=\"![Cookie](./cookie.svg)\"\n\t\t\t\ttitle=\"This website uses cookies\"\n\t\t\t\tdescription=\"\n\t\t\t\t\tWe use cookies to provide social media features and to analyse our traffic. \n\t\t\t\t\tWe also share information about your use of our site with our \n\t\t\t\t\tsocial media and analytics partners who may combine it with other\n\t\t\t\t\tinformation that you've provided to them. [Learn more](/).\n\t\t\t\t\"\n\t\t\t\tcontrols={{\n\t\t\t\t\tall: 'Accept all cookies',\n\t\t\t\t\tselected: 'Accept selected cookies'\n\t\t\t\t}}\n\t\t\t\ttypes={[\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'necessary',\n\t\t\t\t\t\tlabel: 'Necessary',\n\t\t\t\t\t\tdisabled: true,\n\t\t\t\t\t\tchecked: true,\n\t\t\t\t\t\tscripts: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocation: 'head',\n\t\t\t\t\t\t\t\tsrc: './scripts/script-A.js'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'analytics',\n\t\t\t\t\t\tlabel: 'Analytics',\n\t\t\t\t\t\tscripts: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocation: 'body',\n\t\t\t\t\t\t\t\tsrc: './scripts/script-B.js'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tid: 'marketing',\n\t\t\t\t\t\tlabel: 'Marketing',\n\t\t\t\t\t\tscripts: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlocation: 'head',\n\t\t\t\t\t\t\t\tsrc: './scripts/script-C.js'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t]}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}